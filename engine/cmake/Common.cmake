
##
## Find necessary libraries
##

FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)

##
## Specify preprocessor definitions
##

IF(MSVC)
	ADD_DEFINITIONS("-D_CRT_SECURE_NO_DEPRECATE=1")
	ADD_DEFINITIONS("-D_CRT_SECURE_NO_WARNINGS=1")
	ADD_DEFINITIONS("-D_SCL_SECURE_NO_DEPRECATE=1")
	ADD_DEFINITIONS("-D_CRT_NONSTDC_NO_DEPRECATE=1")
ENDIF()

ADD_DEFINITIONS("-D__TBB_NO_IMPLICIT_LINKAGE=1")
ADD_DEFINITIONS("-DTBB_NO_LEGACY=1")

IF(WIN32)
	ADD_DEFINITIONS("-DDIRECTINPUT_VERSION=0x800")
ENDIF()

ADD_DEFINITIONS("-DFT_CONFIG_OPTION_SYSTEM_ZLIB=1")

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
	ADD_DEFINITIONS("-D_DEBUG")
	ADD_DEFINITIONS("-DTBB_DO_ASSERT")
ELSE()
	ADD_DEFINITIONS("-DNDEBUG")
	IF(MSVC)
		ADD_DEFINITIONS("-D_SECURE_SCL=0")
		ADD_DEFINITIONS("-D_HAS_ITERATOR_DEBUGGING=0")
	ENDIF()
ENDIF()

##
## Specify additional header search paths
##

INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/tinyxml")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/zlib")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/libjpeg")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/libpng")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/freetype2/include")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/intel_tbb/include")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/openal_soft/include")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/libogg/include")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/libvorbis/include")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/3rdparty/glfw/include")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}/engine")
INCLUDE_DIRECTORIES("${engine_SOURCE_DIR}")
IF(OPENGL_INCLUDE_DIR)
	INCLUDE_DIRECTORIES("${OPENGL_INCLUDE_DIR}")
ENDIF()

